# This docker-compose.yml file  is fully functional to evaluate DefectDojo
# in your local environment.
#
# Although Docker Compose is one of the supported installation methods to
# deploy a containerized DefectDojo in a production environment, the
# docker-compose.yml file is not intended for production use without first
# customizing it to your particular situation.
---
version: '3.8'
services:
  mongo:
    image: mongo:latest
    container_name: pritunldb
    hostname: pritunldb
    networks:
      - private
    volumes:
      - ./db:/data/db
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
  
    pritunl:
    image: goofball222/pritunl:{{ PITUNL_VERSION }}
    container_name: pritunl
    hostname: pritunl
    # privileged: true
    # sysctls:
    #   - net.ipv6.conf.all.disable_ipv6=0
    networks:
      - private
      - proxy
    links:
      - mongo
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 1194:1194
      - 1194:1194/udp
      - 1195:1195/udp
    expose:
      - 9700
    environment:
      - TZ=UTC
      - MONGODB_URI=mongodb://mongo:27017/pritunl
      - REVERSE_PROXY=true
    labels:
      - traefik.backend=pritunl
      - traefik.frontend.rule=Host:{{ DOMAIN_NAME }}
      - traefik.port=9700
      - traefik.docker.network=proxy
      - traefik.enable=true
      # - traefik.http.routers.nginx.rule=Host(`none.org`)
      # - traefik.http.services.nginx.loadbalancer.server.port=8080
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=le      
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped


  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    depends_on:
      pritunl:
        condition: service_started
    # userns_mode: "host"
    networks:
      - private
      - proxy
    expose:
      - 80
      - 443
    command:
      # - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --certificatesResolvers.le.acme.email=tls@none.org
      - --certificatesResolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.dnschallenge=true
      # - --certificatesresolvers.le.acme.dnschallenge.provider=digitalocean
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --providers.file.filename=/configs/traefik_tls.yml
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik_tls.yml:/configs/traefik_tls.yml"
      - "./letsencrypt:/letsencrypt"
    restart: always

networks:
  proxy:
    external:
      name: proxy
  private:
    driver: bridge
    internal: true